name: Release workflow

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  repository: https://github.com/powerapi-ng/smartwatts
jobs:
  lint_and_test:
    name: Lint and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
      influx:
        image: influxdb:1.8
        ports:
          - 8086:8086
    steps:
      - name: Install tools
        run: |
          sudo apt update
          sudo apt install -y libvirt-dev procps
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install flake8 pylint
          pip install -e .
      - name: Test with pytest
        run: |
          . venv/bin/activate
          python setup.py pytest
      - name: Lint with flake8
        run: |
          . venv/bin/activate
          flake8 smartwatts
      - name: Lint with pylint
        run: |
          . venv/bin/activate
          pylint smartwatts

  check_release:
    name: Check release and version correspondance
    runs-on: ubuntu-latest
    needs: lint_and_test
    outputs:
      version: ${{ steps.step2.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Check tag and package version
        id: step2
        run: |
          export GIT_TAG=$(echo $GITHUB_REF | sed -e 's/refs\/tags\/v//g')
          test $GIT_TAG ==  $(grep __version__ smartwatts/__init__.py | cut -d \" -f 2)
          echo "::set-output name=version::$GIT_TAG"

  build_pypi:
    name: Push package on pypi
    runs-on: ubuntu-latest
    env:
      PYPI_PASS: ${{ secrets.PYPI_PASS }}
    needs: check_release
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environement
        run: pip install -U pip twine
      - name: Init .pypirc
        run: |
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "username = powerapi" >> ~/.pypirc
          echo -e "password = $PYPI_PASS" >> ~/.pypirc
      - name: Generate package
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python3 -m pip install wheel
          python3 setup.py sdist bdist_wheel
      - name: Upload to pypi
        run: twine upload dist/*

  build_and_push_to_dockerHub:
    name: Build and push docker image to DockerHub
    runs-on: ubuntu-latest
    needs: check_release
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Cpython image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile
          tags: powerapi/smartwatts-formula:latest, powerapi/smartwatts-formula:${{needs.check_release.outputs.version}}

  publish_release:
    name: Publish release on github
    runs-on: ubuntu-latest
    needs: check_release
    steps:
      - uses: actions/checkout@v2
      - name: Create pre-changelog
        id: pre-changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          preset: angular
          output-file: ~/pre-changelog.md
          release-count: 1
      - name: Create Changelog
        env:
          CHANGELOG_CONTENT: ${{ steps.changelog.outputs.clean_changelog }}
        run: |
          sudo apt install -y npm
          sudo npm install -g conventional-changelog-cli
          conventional-changelog -p angular -r 2 | grep -v "^# \[\]" | sed 's/^#//g' > ~/final-changelog.md
          cat ~/final-changelog.md
          cat ~/final-changelog.md >> CHANGELOG.md
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{needs.check_release.outputs.version}}
        run: gh release create v$VERSION -d -t v$VERSION -F ~/final-changelog.md

